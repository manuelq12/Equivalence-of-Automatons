package interfaz;

import java.awt.Color;
import java.io.FileWriter;
import java.io.PrintWriter;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import modelo.Main;

/**
 *
 * @author Juan Esteban Gallo
 */
@SuppressWarnings("serial")
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("Determinar Equivalencia");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Maquinas Moore");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Maquinas Mealy");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Segunda Maquina a comparará :");

        jLabel3.setText("Primera Maquina a comparará :");
        
        ImageIcon imagen = new ImageIcon("./Maquinas/icon.png");
        jLabel1.setIcon(imagen);

        jButton2.setText("Instrucciones");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButton1)
                                    .addGap(28, 28, 28)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton2))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	
    	FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter("./Registro/MaquinaSolicitada.txt");
            pw = new PrintWriter(fichero);
            
            
                pw.println(jTextArea2.getText());
                pw.println(jTextArea1.getText());
                pw.close();
                
                Main mundo= new Main();
                if(jRadioButton1.isSelected()) {
                	mundo= new Main("O");
                }
                if(jRadioButton2.isSelected()) {
                	 mundo= new Main("M");
                }
                String resultado="";
                if (  mundo.isEquivalente() == true ) resultado= "son";
                else resultado= "no son";
                JOptionPane.showMessageDialog(this,  "El resultado de la equivalencia da como resutado que "+resultado+" equivalentes", "Resultado", JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception e) {
            e.printStackTrace();
        }
    }                                        

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
    	jRadioButton1.setSelected(true);
    	if( jRadioButton2.isSelected()== true )jRadioButton2.setSelected(false);
    }                                             

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                              
    	jRadioButton2.setSelected(true);
    	if( jRadioButton1.isSelected()== true )jRadioButton1.setSelected(false);
    }                                             

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { 
    	if( jRadioButton2.isSelected()) {
    		JOptionPane.showMessageDialog(this,"Mealy:\r\n" + 
    				"1. Indicar la cantidad de estados que contiene la máquina.\r\n" + 
    				"2. Indicar la cantidad de posibles entradas que recibe la máquina.\r\n" + 
    				"3. Indicar el nombre de cada estado en la máquina, cada estado debe ser un sólo caracter y \r\n" + 
    				"estar separado uno del otro por una coma.\r\n" + 
    				"4. Línea para indicar las entradas dentro de la matriz. Debe empezar con un null, luego un espacio \r\n" + 
    				"y la primer entrada, después un espacio y la siguiente entrada y así sucesivamente hasta acabar las \r\n" + 
    				"posibles entradas, cuando estas ya se acaben, un último espacio y escribir null.\r\n" + 
    				"5. Cada línea siguiente equivale a los valores de un estado, el primer estado siempre debe ser el \r\n" + 
    				"estado inicial, se escribe de la siguiente manera: dando el nombre del estado actual, un espacio, \r\n" + 
    				"estado al que va junto con la salida que retorna (pegados) cuando recibe la primera entrada establecida \r\n" + 
    				"en la línea del punto 4, un espacio, estado al que va junto con la salida que retorna cuando recibe la \r\n" + 
    				"segunda entrada establecida en la línea del punto 4, \r\n" + 
    				"y así sucesivamente hasta acabar con los valores de ese estado. Cuando se quieren ingresar los \r\n" + 
    				"valores de otro estado se da un cambio de línea.\r\n" + 
    				"6. Por último, se hace un último cambio de línea, escriben tres guiones \"---\" para establecer que \r\n" + 
    				"no se recibirá más información de esta máquina.\r\n" + 
    				"\r\n" + 
    				"Ejemplo:\r\n" + 
    				"\r\n" + 
    				"7\r\n" + 
    				"2\r\n" + 
    				"A,B,C,D,E,F,G\r\n" + 
    				"null 0 1 null\r\n" + 
    				"A B1 C0\r\n" + 
    				"B D1 E0\r\n" + 
    				"C D1 E0\r\n" + 
    				"D F0 G1\r\n" + 
    				"E F0 G1\r\n" + 
    				"F B0 B1\r\n" + 
    				"G C0 C1\r\n" + 
    				"---" , "Instrucciones Mealy", JOptionPane.INFORMATION_MESSAGE);
    	}
    	else {
    		JOptionPane.showMessageDialog(this, "Moore:\r\n" + 
    				"1. Indicar la cantidad de estados que contiene la máquina.\r\n" + 
    				"2. Indicar la cantidad de posibles entradas que recibe la máquina.\r\n" + 
    				"3. Indicar el nombre de cada estado en la máquina, cada estado debe ser un sólo caracter \r\n" + 
    				"y estar separado uno del otro por una coma.\r\n" + 
    				"4. Línea para indicar las entradas dentro de la matriz. Debe empezar con un null, luego un \r\n" + 
    				"espacio y la primer entrada, después un espacio y la siguiente entrada y así sucesivamente \r\n" + 
    				"hasta acabar las posibles entradas, cuando estas ya se acaben, un último espacio y escribir null.\r\n" + 
    				"5. Cada línea siguiente equivale a los valores de un estado, el primer estado siempre debe \r\n" + 
    				"ser el estado inicial, se escribe de la siguiente manera: dando el nombre del estado actual, \r\n" + 
    				"un espacio, estado al que va cuando recibe la primera entrada establecida en la línea del punto\r\n" + 
    				" 4, un espacio, estado al que va cuando recibe la segunda entrada establecida en la línea del \r\n" + 
    				"punto 4, y así sucesivamente hasta acabar con todas las posibles entradas, por último se da un \r\n" + 
    				"último espacio y se escribe el valor de la salida que retorna el estado. Cuando se quieren \r\n" + 
    				"ingresar los valores de otro estado se da un cambio de línea.\r\n" + 
    				"6. Por último, se hace un último cambio de línea, escriben tres guiones \"---\" para establecer \r\n" + 
    				"que no se recibirá más información de esta máquina.\r\n" + 
    				"\r\n" + 
    				"Ejemplo:\r\n" + 
    				"\r\n" + 
    				"4\r\n" + 
    				"2\r\n" + 
    				"H,I,J,K\r\n" + 
    				"null 0 1 null\r\n" + 
    				"H I I 1\r\n" + 
    				"I J J 1\r\n" + 
    				"J K K 0\r\n" + 
    				"K I I 0\r\n" + 
    				"---","Instrucciones Moore",JOptionPane.INFORMATION_MESSAGE);
    	}
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
}
